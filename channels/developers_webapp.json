{
  "posts": {
    "8ens1q3cg3dpznx85hn1ne7ija": {
      "id": "8ens1q3cg3dpznx85hn1ne7ija",
      "create_at": 1747977920640,
      "update_at": 1747977920640,
      "edit_at": 0,
      "delete_at": 0,
      "is_pinned": false,
      "user_id": "qaj8u6h9h3b17qcc8stqgq86br",
      "channel_id": "shfrenxu83ye88puqr5c45ddtw",
      "root_id": "nxfp9dsx9tf9ie86n1in9418wy",
      "original_id": "",
      "message": "If there's an area you've worked with before, then the input could prove helpful.\n\nEither way, it's still good to know how the conversation is going so you're aware of how the migrations are handled.",
      "type": "",
      "props": {},
      "hashtags": "",
      "file_ids": [],
      "pending_post_id": "",
      "remote_id": "",
      "reply_count": 0,
      "last_reply_at": 0,
      "participants": null,
      "metadata": {}
    },
    "8z3p691bi3fb3fghwt8qwwfwnr": {
      "id": "8z3p691bi3fb3fghwt8qwwfwnr",
      "create_at": 1748508720428,
      "update_at": 1748873936181,
      "edit_at": 0,
      "delete_at": 0,
      "is_pinned": false,
      "user_id": "rwyxfo9i8ifeud85fr7e37d3gr",
      "channel_id": "shfrenxu83ye88puqr5c45ddtw",
      "root_id": "ef8i6t39qi86un6kkthrtr9nqa",
      "original_id": "",
      "message": "Alright, I've made a note to follow up on E2E coverage. I was looking into [Playwright’s coverage API](https://playwright.dev/docs/api/class-coverage), but I’m still trying to understand how reliable it is and what the cost would be to use it effectively.\n\nIn parallel, we're likely to define E2E coverage differently, based on test cases rather than code. The idea is that a feature would be considered 100% E2E covered if all its test cases have corresponding implementations (in Playwright ideally since Cypress is essentially deprecated). This is part of a broader discussion we're having with a few folks involved in Testing Matters.",
      "type": "",
      "props": {},
      "hashtags": "",
      "file_ids": [],
      "pending_post_id": "",
      "has_reactions": true,
      "remote_id": "",
      "reply_count": 0,
      "last_reply_at": 0,
      "participants": null,
      "metadata": {
        "reactions": [
          {
            "user_id": "zd9ayei6fpbnjkn1umu8xknogh",
            "post_id": "8z3p691bi3fb3fghwt8qwwfwnr",
            "emoji_name": "point_up",
            "create_at": 1748509320620,
            "update_at": 1748509320620,
            "delete_at": 0,
            "remote_id": "",
            "channel_id": "shfrenxu83ye88puqr5c45ddtw"
          },
          {
            "user_id": "zd9ayei6fpbnjkn1umu8xknogh",
            "post_id": "8z3p691bi3fb3fghwt8qwwfwnr",
            "emoji_name": "+1",
            "create_at": 1748509332088,
            "update_at": 1748509332088,
            "delete_at": 0,
            "remote_id": "",
            "channel_id": "shfrenxu83ye88puqr5c45ddtw"
          },
          {
            "user_id": "jhh69h1swfg4bj3drcshusnm1w",
            "post_id": "8z3p691bi3fb3fghwt8qwwfwnr",
            "emoji_name": "+1",
            "create_at": 1748518660884,
            "update_at": 1748518660884,
            "delete_at": 0,
            "remote_id": "",
            "channel_id": "shfrenxu83ye88puqr5c45ddtw"
          },
          {
            "user_id": "guk95b7obfrq7b995jcxaknxga",
            "post_id": "8z3p691bi3fb3fghwt8qwwfwnr",
            "emoji_name": "+1",
            "create_at": 1748873925285,
            "update_at": 1748873925285,
            "delete_at": 0,
            "remote_id": "",
            "channel_id": "shfrenxu83ye88puqr5c45ddtw"
          },
          {
            "user_id": "guk95b7obfrq7b995jcxaknxga",
            "post_id": "8z3p691bi3fb3fghwt8qwwfwnr",
            "emoji_name": "point_up",
            "create_at": 1748873936179,
            "update_at": 1748873936179,
            "delete_at": 0,
            "remote_id": "",
            "channel_id": "shfrenxu83ye88puqr5c45ddtw"
          }
        ]
      }
    },
    "9c475u5wjbb5ikryx59rr1f3aa": {
      "id": "9c475u5wjbb5ikryx59rr1f3aa",
      "create_at": 1747840333343,
      "update_at": 1747840333343,
      "edit_at": 0,
      "delete_at": 0,
      "is_pinned": false,
      "user_id": "ooumoqgq3bfiijzwbn8badznwc",
      "channel_id": "shfrenxu83ye88puqr5c45ddtw",
      "root_id": "mqkmk4o6g7y7dmg1c3ifd8n8do",
      "original_id": "",
      "message": "Sorry -- missed this.  I'm doing similar, basing styles on `_admin-console.scss` and starting a new scss file for my custom component (in its directory).",
      "type": "",
      "props": {},
      "hashtags": "",
      "file_ids": [],
      "pending_post_id": "",
      "remote_id": "",
      "reply_count": 0,
      "last_reply_at": 0,
      "participants": null,
      "metadata": {}
    },
    "9ef4yjkqeffidfag6fgc7t8oyo": {
      "id": "9ef4yjkqeffidfag6fgc7t8oyo",
      "create_at": 1747832585816,
      "update_at": 1747832585816,
      "edit_at": 0,
      "delete_at": 0,
      "is_pinned": false,
      "user_id": "qaj8u6h9h3b17qcc8stqgq86br",
      "channel_id": "shfrenxu83ye88puqr5c45ddtw",
      "root_id": "nxfp9dsx9tf9ie86n1in9418wy",
      "original_id": "",
      "message": "\u003e \u003e I forget if we needed that ref to actually call methods on the component itself rather than just forwarding the ref along to the DOM element somewhere...\n\nThe functions that need firing are passed to `SuggestionBox` as regular props not refs. I also haven't encountered a situation where a function is passed as a ref. Does that happen somewhere in the codebase?\n\n\u003e I think you might be able to mock the SuggestionBox as a class component for now...\n\nThat's the approach I went with initially, but given that the majority of the props passed to `SuggestionBox` are removed via `Reflect`, I don't see any way to call them, hence I mocked [a function component instead that returns simple elements](https://community.mattermost.com/core/pl/ts5wmcakifygj88w1wx19j6fqa) for testing purposes.",
      "type": "",
      "props": {},
      "hashtags": "",
      "file_ids": [],
      "pending_post_id": "",
      "remote_id": "",
      "reply_count": 0,
      "last_reply_at": 0,
      "participants": null,
      "metadata": {}
    },
    "9feaf5f4xb8bxp1wihdx4mihcy": {
      "id": "9feaf5f4xb8bxp1wihdx4mihcy",
      "create_at": 1747856423264,
      "update_at": 1747856423264,
      "edit_at": 0,
      "delete_at": 0,
      "is_pinned": false,
      "user_id": "rwyxfo9i8ifeud85fr7e37d3gr",
      "channel_id": "shfrenxu83ye88puqr5c45ddtw",
      "root_id": "ef8i6t39qi86un6kkthrtr9nqa",
      "original_id": "",
      "message": "Good point. I'm also not too worried about absolute numbers, but if it's not too challenging to exclude those tests, we could give it a try, if anything, to get that information. ",
      "type": "",
      "props": {},
      "hashtags": "",
      "file_ids": [],
      "pending_post_id": "",
      "remote_id": "",
      "reply_count": 0,
      "last_reply_at": 0,
      "participants": null,
      "metadata": {}
    },
    "bgandq95q7y1jc7d16qtwmgi1h": {
      "id": "bgandq95q7y1jc7d16qtwmgi1h",
      "create_at": 1748474002067,
      "update_at": 1748474002067,
      "edit_at": 0,
      "delete_at": 0,
      "is_pinned": false,
      "user_id": "guk95b7obfrq7b995jcxaknxga",
      "channel_id": "shfrenxu83ye88puqr5c45ddtw",
      "root_id": "ef8i6t39qi86un6kkthrtr9nqa",
      "original_id": "",
      "message": "Nothing that I can think of unless we were to go and explore code coverage in Cypress or Playwright as well as in the unit tests, but that's definitely outside the scope of this initial effort",
      "type": "",
      "props": {},
      "hashtags": "",
      "file_ids": [],
      "pending_post_id": "",
      "remote_id": "",
      "reply_count": 0,
      "last_reply_at": 0,
      "participants": null,
      "metadata": {}
    },
    "cawyti638tnubxjwew7k7jyy6r": {
      "id": "cawyti638tnubxjwew7k7jyy6r",
      "create_at": 1748874038228,
      "update_at": 1748874038228,
      "edit_at": 0,
      "delete_at": 0,
      "is_pinned": false,
      "user_id": "guk95b7obfrq7b995jcxaknxga",
      "channel_id": "shfrenxu83ye88puqr5c45ddtw",
      "root_id": "ef8i6t39qi86un6kkthrtr9nqa",
      "original_id": "",
      "message": "That's a great idea. We'd definitely need to look at the E2E tests since those are usually the ones that correspond the best to the test suite, but that could even be as simple as searching the code for each test case's ID",
      "type": "",
      "props": {},
      "hashtags": "",
      "file_ids": [],
      "pending_post_id": "",
      "remote_id": "",
      "reply_count": 0,
      "last_reply_at": 0,
      "participants": null,
      "metadata": {}
    },
    "d7tqd1jyrtgzpqe359xomwz3bh": {
      "id": "d7tqd1jyrtgzpqe359xomwz3bh",
      "create_at": 1748573979411,
      "update_at": 1748573979411,
      "edit_at": 0,
      "delete_at": 0,
      "is_pinned": false,
      "user_id": "su6hwbfqe3r9zem15emffm8q5h",
      "channel_id": "shfrenxu83ye88puqr5c45ddtw",
      "root_id": "",
      "original_id": "",
      "message": "zenjiro joined the channel.",
      "type": "system_join_channel",
      "props": {
        "username": "zenjiro"
      },
      "hashtags": "",
      "file_ids": [],
      "pending_post_id": "",
      "reply_count": 0,
      "last_reply_at": 0,
      "participants": null,
      "metadata": {}
    },
    "ef8i6t39qi86un6kkthrtr9nqa": {
      "id": "ef8i6t39qi86un6kkthrtr9nqa",
      "create_at": 1747853410759,
      "update_at": 1748874038228,
      "edit_at": 0,
      "delete_at": 0,
      "is_pinned": false,
      "user_id": "rwyxfo9i8ifeud85fr7e37d3gr",
      "channel_id": "shfrenxu83ye88puqr5c45ddtw",
      "root_id": "",
      "original_id": "",
      "message": "Hey team, as I've mentioned to a few of you, I'm working on adding code coverage tracking to our monorepo. I've already implemented the server-side changes in [#30284](https://github.com/mattermost/mattermost/pull/30284), and I'm now focusing on webapp.\n\nSince the bulk of the changes is fairly contained, I thought a sample PR might be easier to reason about than yet another document. [#31144](https://github.com/mattermost/mattermost/pull/31144) includes the minimal set of changes needed, pending some decision on exactly what we'd like to track. Feel free to leave thoughts here or directly on GitHub.\n\nJust to reiterate, we're not looking to enforce any specific coverage thresholds at this stage. Our primary goal is simply to track the progress of our coverage over time. We also fully recognize that frontend code is covered through other means (e.g., end-to-end tests), which we'll be evaluating as part of this effort down the line.\n\n/cc @harrison ",
      "type": "",
      "props": {},
      "hashtags": "",
      "file_ids": [],
      "pending_post_id": "",
      "remote_id": "",
      "reply_count": 0,
      "last_reply_at": 0,
      "participants": null,
      "metadata": {}
    },
    "g6f8wn7fp3rfzrjoyxg373u49e": {
      "id": "g6f8wn7fp3rfzrjoyxg373u49e",
      "create_at": 1748261621723,
      "update_at": 1748261621723,
      "edit_at": 0,
      "delete_at": 0,
      "is_pinned": false,
      "user_id": "rwyxfo9i8ifeud85fr7e37d3gr",
      "channel_id": "shfrenxu83ye88puqr5c45ddtw",
      "root_id": "ef8i6t39qi86un6kkthrtr9nqa",
      "original_id": "",
      "message": "@harrison Let me know if there's more to track or change approach-wise before moving to a more formal review.",
      "type": "",
      "props": {},
      "hashtags": "",
      "file_ids": [],
      "pending_post_id": "",
      "remote_id": "",
      "reply_count": 0,
      "last_reply_at": 0,
      "participants": null,
      "metadata": {}
    },
    "gjuqif8uufnsdmmmoqgu3iaddc": {
      "id": "gjuqif8uufnsdmmmoqgu3iaddc",
      "create_at": 1748889286135,
      "update_at": 1748894247889,
      "edit_at": 0,
      "delete_at": 0,
      "is_pinned": false,
      "user_id": "qaj8u6h9h3b17qcc8stqgq86br",
      "channel_id": "shfrenxu83ye88puqr5c45ddtw",
      "root_id": "nxfp9dsx9tf9ie86n1in9418wy",
      "original_id": "",
      "message": "Still working on the migration. Just been busy the past couple of days.",
      "type": "",
      "props": {},
      "hashtags": "",
      "file_ids": [],
      "pending_post_id": "",
      "has_reactions": true,
      "remote_id": "",
      "reply_count": 53,
      "last_reply_at": 0,
      "participants": null,
      "metadata": {
        "reactions": [
          {
            "user_id": "guk95b7obfrq7b995jcxaknxga",
            "post_id": "gjuqif8uufnsdmmmoqgu3iaddc",
            "emoji_name": "+1",
            "create_at": 1748894247886,
            "update_at": 1748894247886,
            "delete_at": 0,
            "remote_id": "",
            "channel_id": "shfrenxu83ye88puqr5c45ddtw"
          }
        ]
      }
    },
    "k173rkn8f7r47dk14kfx68ehac": {
      "id": "k173rkn8f7r47dk14kfx68ehac",
      "create_at": 1747834194401,
      "update_at": 1747977614950,
      "edit_at": 0,
      "delete_at": 0,
      "is_pinned": false,
      "user_id": "guk95b7obfrq7b995jcxaknxga",
      "channel_id": "shfrenxu83ye88puqr5c45ddtw",
      "root_id": "nxfp9dsx9tf9ie86n1in9418wy",
      "original_id": "",
      "message": "\u003e The functions that need firing are passed to `SuggestionBox` as regular props not refs. I also haven't encountered a situation where a function is passed as a ref. Does that happen somewhere in the codebase?\n\nI meant that the parent component is passing a ref to `SuggestionBox` so that it can call methods of the `SuggestionBox` by calling `suggestionRef.current.someMethod()`. Scanning through the code though, it looks like the only methods we're actually using though are `focus` and `blur` which would be on the underlying textarea or `getTextbox` to get that textarea, so that would mean we could actually forward the ref through anyway. Either I was completely wrong then or I'm just remembering old code.\n\n\u003e That's the approach I went with initially, but given that the majority of the props passed to `SuggestionBox` are removed via `Reflect`, I don't see any way to call them, hence I mocked [a function component instead that returns simple elements](https://community.mattermost.com/core/pl/ts5wmcakifygj88w1wx19j6fqa) for testing purposes.\n\nYeah, I saw that, but I thought you meant that didn't work because of some weird React thing that expected. Maybe I'll just let Daniel handle the testing part of this since I'm worried I'm just making things confusing by jumping in occasionally :sweat_smile: ",
      "type": "",
      "props": {},
      "hashtags": "",
      "file_ids": [],
      "pending_post_id": "",
      "has_reactions": true,
      "remote_id": "",
      "reply_count": 0,
      "last_reply_at": 0,
      "participants": null,
      "metadata": {
        "reactions": [
          {
            "user_id": "qaj8u6h9h3b17qcc8stqgq86br",
            "post_id": "k173rkn8f7r47dk14kfx68ehac",
            "emoji_name": "sweat_smile",
            "create_at": 1747977614947,
            "update_at": 1747977614947,
            "delete_at": 0,
            "remote_id": "",
            "channel_id": "shfrenxu83ye88puqr5c45ddtw"
          }
        ]
      }
    },
    "khrn6n5pdfr5xr7ei94gqeo1jw": {
      "id": "khrn6n5pdfr5xr7ei94gqeo1jw",
      "create_at": 1748431594664,
      "update_at": 1748431594664,
      "edit_at": 0,
      "delete_at": 0,
      "is_pinned": false,
      "user_id": "rnkw9a856jfc9g7mr3ezk3yqko",
      "channel_id": "shfrenxu83ye88puqr5c45ddtw",
      "root_id": "",
      "original_id": "",
      "message": "davidduong joined the channel.",
      "type": "system_join_channel",
      "props": {
        "username": "davidduong"
      },
      "hashtags": "",
      "file_ids": [],
      "pending_post_id": "",
      "reply_count": 0,
      "last_reply_at": 0,
      "participants": null,
      "metadata": {}
    },
    "kxisqwaftpgbicri6a494hox5y": {
      "id": "kxisqwaftpgbicri6a494hox5y",
      "create_at": 1747919606661,
      "update_at": 1747923403782,
      "edit_at": 0,
      "delete_at": 0,
      "is_pinned": false,
      "user_id": "guk95b7obfrq7b995jcxaknxga",
      "channel_id": "shfrenxu83ye88puqr5c45ddtw",
      "root_id": "ef8i6t39qi86un6kkthrtr9nqa",
      "original_id": "",
      "message": "I can't think of a great way to do it more permanently, but I might be able to hack together a list of files to exclude with some grepping just to get an idea of how much of an effect they have",
      "type": "",
      "props": {},
      "hashtags": "",
      "file_ids": [],
      "pending_post_id": "",
      "has_reactions": true,
      "remote_id": "",
      "reply_count": 0,
      "last_reply_at": 0,
      "participants": null,
      "metadata": {
        "emojis": [
          {
            "id": "xtqkuabo6tntmm5mm8z3otp1ph",
            "create_at": 1503419419269,
            "update_at": 1503419419269,
            "delete_at": 0,
            "creator_id": "hy5sq51sebfh58ktrce5ijtcwy",
            "name": "ack"
          }
        ],
        "reactions": [
          {
            "user_id": "rwyxfo9i8ifeud85fr7e37d3gr",
            "post_id": "kxisqwaftpgbicri6a494hox5y",
            "emoji_name": "ack",
            "create_at": 1747923403778,
            "update_at": 1747923403778,
            "delete_at": 0,
            "remote_id": "",
            "channel_id": "shfrenxu83ye88puqr5c45ddtw"
          }
        ]
      }
    },
    "ngc9hfui9jg1mxxqerowarxurh": {
      "id": "ngc9hfui9jg1mxxqerowarxurh",
      "create_at": 1748869192812,
      "update_at": 1748869231537,
      "edit_at": 1748869231535,
      "delete_at": 0,
      "is_pinned": false,
      "user_id": "guk95b7obfrq7b995jcxaknxga",
      "channel_id": "shfrenxu83ye88puqr5c45ddtw",
      "root_id": "",
      "original_id": "",
      "message": "#### #webguild-Jun02 1) Accessible error messages and autocompletes\n\nI'm going to show off some recent PRs for making some components more accessible and the patterns that we're using for them",
      "type": "",
      "props": {
        "from_plugin": "true"
      },
      "hashtags": "#webguild-Jun02",
      "file_ids": [],
      "pending_post_id": "",
      "reply_count": 0,
      "last_reply_at": 0,
      "participants": null,
      "metadata": {}
    },
    "oooz43hue7b8dymwuoce57jfph": {
      "id": "oooz43hue7b8dymwuoce57jfph",
      "create_at": 1747856193423,
      "update_at": 1747856193423,
      "edit_at": 0,
      "delete_at": 0,
      "is_pinned": false,
      "user_id": "guk95b7obfrq7b995jcxaknxga",
      "channel_id": "shfrenxu83ye88puqr5c45ddtw",
      "root_id": "ef8i6t39qi86un6kkthrtr9nqa",
      "original_id": "",
      "message": "I wonder what this looks like if we remove the snapshot tests. Those are still slightly valuable in that they ensure the app doesn't crash in basic cases, but they likely inflate the coverage of the components folder a fair bit. That may be fine if the goal is purely coverage percentage, but I can't help but feeling like it's gaming the metric a bit",
      "type": "",
      "props": {},
      "hashtags": "",
      "file_ids": [],
      "pending_post_id": "",
      "remote_id": "",
      "reply_count": 0,
      "last_reply_at": 0,
      "participants": null,
      "metadata": {}
    },
    "pbf84yy1cbgu5xqwz3bx6eqjhh": {
      "id": "pbf84yy1cbgu5xqwz3bx6eqjhh",
      "create_at": 1747819836043,
      "update_at": 1747820293875,
      "edit_at": 0,
      "delete_at": 0,
      "is_pinned": false,
      "user_id": "sukwowdqntng8e94rek5pe36xa",
      "channel_id": "shfrenxu83ye88puqr5c45ddtw",
      "root_id": "yxm54puxytdhfbmqm1krwo51gw",
      "original_id": "",
      "message": "Just started playing with it its incredicble",
      "type": "",
      "props": {},
      "hashtags": "",
      "file_ids": [],
      "pending_post_id": "",
      "has_reactions": true,
      "remote_id": "",
      "reply_count": 0,
      "last_reply_at": 0,
      "participants": null,
      "metadata": {
        "reactions": [
          {
            "user_id": "sa6ktdwm778f7kxujz7sahk5nw",
            "post_id": "pbf84yy1cbgu5xqwz3bx6eqjhh",
            "emoji_name": "tada",
            "create_at": 1747820293872,
            "update_at": 1747820293872,
            "delete_at": 0,
            "remote_id": "",
            "channel_id": "shfrenxu83ye88puqr5c45ddtw"
          }
        ]
      }
    },
    "yxm54puxytdhfbmqm1krwo51gw": {
      "id": "yxm54puxytdhfbmqm1krwo51gw",
      "create_at": 1747817072721,
      "update_at": 1747833650120,
      "edit_at": 0,
      "delete_at": 0,
      "is_pinned": false,
      "user_id": "sa6ktdwm778f7kxujz7sahk5nw",
      "channel_id": "shfrenxu83ye88puqr5c45ddtw",
      "root_id": "",
      "original_id": "",
      "message": "I just discovered this, and it is pretty cool: https://react-scan.com/\n\nWithout any plugins or anything, you can run it from the command line and will open any website (like Mattermost) and tell you when and why everything render in a very intuitive way.\n\nIt doesn't do much more than what the developers tool already do, but I find it more accessible and more \"in your face\".\n\n@harrison @mohammed-zubair.ahmed I recommend you to give it a try. You can try it really easily by just running on the command line `npx react-scan@latest https://community.mattermost.com`.\n\nLet me know what you guys think :D",
      "type": "",
      "props": {},
      "hashtags": "",
      "file_ids": [],
      "pending_post_id": "",
      "has_reactions": true,
      "remote_id": "",
      "reply_count": 2,
      "last_reply_at": 0,
      "participants": null,
      "metadata": {
        "embeds": [
          {
            "type": "opengraph",
            "url": "https://react-scan.com/",
            "data": {
              "audios": null,
              "description": "React Scan automatically detects and highlights components that cause performance issues in your React app. Drop it in anywhere – script tag, npm, you name it!",
              "determiner": "",
              "images": [
                {
                  "height": 0,
                  "secure_url": "https://community.mattermost.com/api/v4/image?url=https%3A%2F%2Freact-scan.million.dev%2Fbanner.png",
                  "type": "",
                  "url": "",
                  "width": 0
                }
              ],
              "locale": "",
              "locales_alternate": null,
              "site_name": "",
              "title": "React Scan",
              "type": "website",
              "url": "https://react-scan.com/",
              "videos": null
            }
          }
        ],
        "images": {
          "https://community.mattermost.com/api/v4/image?url=https%3A%2F%2Freact-scan.million.dev%2Fbanner.png": {
            "width": 6655,
            "height": 3662,
            "format": "png",
            "frame_count": 0
          }
        },
        "reactions": [
          {
            "user_id": "qaj8u6h9h3b17qcc8stqgq86br",
            "post_id": "yxm54puxytdhfbmqm1krwo51gw",
            "emoji_name": "eyes",
            "create_at": 1747832621477,
            "update_at": 1747832621477,
            "delete_at": 0,
            "remote_id": "",
            "channel_id": "shfrenxu83ye88puqr5c45ddtw"
          }
        ]
      }
    },
    "zexuqkfqy3rhfjycmmbyttmn5a": {
      "id": "zexuqkfqy3rhfjycmmbyttmn5a",
      "create_at": 1747833650120,
      "update_at": 1747833650120,
      "edit_at": 0,
      "delete_at": 0,
      "is_pinned": false,
      "user_id": "guk95b7obfrq7b995jcxaknxga",
      "channel_id": "shfrenxu83ye88puqr5c45ddtw",
      "root_id": "yxm54puxytdhfbmqm1krwo51gw",
      "original_id": "",
      "message": "Wow, that's very nice. That's a much nicer way to display that info than Why Did You Render or the dev tools",
      "type": "",
      "props": {},
      "hashtags": "",
      "file_ids": [],
      "pending_post_id": "",
      "remote_id": "",
      "reply_count": 0,
      "last_reply_at": 0,
      "participants": null,
      "metadata": {}
    }
  },
  "channel": {
    "id": "shfrenxu83ye88puqr5c45ddtw",
    "create_at": 1576262858340,
    "update_at": 1725032509962,
    "delete_at": 0,
    "team_id": "rcgiyftm7jyrxnma1osd8zswby",
    "type": "O",
    "display_name": "Developers: Webapp",
    "name": "webapp",
    "header": "[GitHub](https://github.com/mattermost/mattermost-webapp) | [Documentation](https://developers.mattermost.com/contribute/webapp/) | Weekly Guild Meeting [Monday every week at @ 10am EDT, 2pm UTC](https://mattermost.zoom.us/s/83020601199)",
    "purpose": "A channel to discuss all things related to the Mattermost Webapp.",
    "last_post_at": 1749558782341,
    "total_msg_count": 9796,
    "extra_update_at": 0,
    "creator_id": "jhh69h1swfg4bj3drcshusnm1w",
    "scheme_id": null,
    "props": null,
    "group_constrained": null,
    "shared": null,
    "total_msg_count_root": 2154,
    "policy_id": null,
    "last_root_post_at": 1749558782341,
    "banner_info": null,
    "policy_enforced": false
  },
  "team": {
    "id": "rcgiyftm7jyrxnma1osd8zswby",
    "create_at": 1445538153952,
    "update_at": 1588876392150,
    "delete_at": 0,
    "display_name": "Contributors",
    "name": "core",
    "description": "",
    "email": "",
    "type": "O",
    "company_name": "",
    "allowed_domains": "",
    "invite_id": "codoy5s743rq5mk18i7u5ksz7e",
    "allow_open_invite": true,
    "last_team_icon_update": 1525181587639,
    "scheme_id": "hbwgrncq1pfcdkpotzimarn95o",
    "group_constrained": null,
    "policy_id": null,
    "cloud_limits_archived": false
  },
  "users": {
    "guk95b7obfrq7b995jcxaknxga": {
      "id": "guk95b7obfrq7b995jcxaknxga",
      "create_at": 1445622302793,
      "update_at": 1749051088902,
      "delete_at": 0,
      "username": "harrison",
      "auth_data": "",
      "auth_service": "",
      "email": "",
      "nickname": "",
      "first_name": "Harrison",
      "last_name": "Healey",
      "position": "Senior Software Design Engineer",
      "roles": "system_user",
      "props": {
        "customStatus": "{\"emoji\":\"mmpride\",\"text\":\"Be excellent to each other\",\"duration\":\"\",\"expires_at\":\"0001-01-01T00:00:00Z\"}",
        "git_user": "hmhealey",
        "last_search_pointer": "4"
      },
      "last_picture_update": 1525120005916,
      "locale": "en",
      "timezone": {
        "automaticTimezone": "America/Toronto",
        "manualTimezone": "America/Detroit",
        "useAutomaticTimezone": "true"
      },
      "disable_welcome_email": false
    },
    "ooumoqgq3bfiijzwbn8badznwc": {
      "id": "ooumoqgq3bfiijzwbn8badznwc",
      "create_at": 1550847264846,
      "update_at": 1744120400455,
      "delete_at": 0,
      "username": "christopher.poile",
      "auth_data": "",
      "auth_service": "",
      "email": "",
      "nickname": "ChrisP",
      "first_name": "Christopher",
      "last_name": "Poile",
      "position": "Senior Software Design Engineer",
      "roles": "system_user",
      "props": {
        "customStatus": "{\"emoji\":\"us\",\"text\":\"At demuxxed 2023\",\"duration\":\"date_and_time\",\"expires_at\":\"2023-10-26T14:30:00Z\"}",
        "last_search_pointer": "1"
      },
      "last_picture_update": 1556564994756,
      "locale": "en",
      "timezone": {
        "automaticTimezone": "America/Toronto",
        "manualTimezone": "Asia/Tashkent",
        "useAutomaticTimezone": "true"
      },
      "disable_welcome_email": false
    },
    "qaj8u6h9h3b17qcc8stqgq86br": {
      "id": "qaj8u6h9h3b17qcc8stqgq86br",
      "create_at": 1729584972637,
      "update_at": 1747388855560,
      "delete_at": 0,
      "username": "vicktor",
      "auth_data": "",
      "auth_service": "",
      "email": "",
      "nickname": "",
      "first_name": "Victor",
      "last_name": "Nyagudi",
      "position": "",
      "roles": "system_user",
      "props": {
        "customStatus": ""
      },
      "last_picture_update": 1730012007874,
      "locale": "en",
      "timezone": {
        "automaticTimezone": "Africa/Nairobi",
        "manualTimezone": "",
        "useAutomaticTimezone": "true"
      },
      "remote_id": "",
      "disable_welcome_email": false
    },
    "rnkw9a856jfc9g7mr3ezk3yqko": {
      "id": "rnkw9a856jfc9g7mr3ezk3yqko",
      "create_at": 1684582248098,
      "update_at": 1748431446689,
      "delete_at": 0,
      "username": "davidduong",
      "auth_data": "",
      "auth_service": "",
      "email": "",
      "nickname": "",
      "first_name": "",
      "last_name": "",
      "position": "",
      "roles": "system_user",
      "locale": "en",
      "timezone": {
        "automaticTimezone": "Asia/Saigon",
        "manualTimezone": "",
        "useAutomaticTimezone": "true"
      },
      "disable_welcome_email": false
    },
    "rwyxfo9i8ifeud85fr7e37d3gr": {
      "id": "rwyxfo9i8ifeud85fr7e37d3gr",
      "create_at": 1560437868650,
      "update_at": 1747029687568,
      "delete_at": 0,
      "username": "claudio.costa",
      "auth_data": "",
      "auth_service": "",
      "email": "",
      "nickname": "streamer45",
      "first_name": "Claudio",
      "last_name": "Costa",
      "position": "Engineering Lead",
      "roles": "system_user system_admin",
      "props": {
        "customStatus": "",
        "last_search_pointer": "3"
      },
      "last_picture_update": 1574092114764,
      "locale": "en",
      "timezone": {
        "automaticTimezone": "Europe/Rome",
        "manualTimezone": "Europe/Rome",
        "useAutomaticTimezone": "true"
      },
      "disable_welcome_email": false
    },
    "sa6ktdwm778f7kxujz7sahk5nw": {
      "id": "sa6ktdwm778f7kxujz7sahk5nw",
      "create_at": 1572169325491,
      "update_at": 1748355788785,
      "delete_at": 0,
      "username": "daniel.espino-garcia",
      "auth_data": "",
      "auth_service": "",
      "email": "",
      "nickname": "",
      "first_name": "Daniel",
      "last_name": "Espino Garcia",
      "position": "Senior Software Design Engineer",
      "roles": "system_user",
      "props": {
        "customStatus": "",
        "last_search_pointer": "4"
      },
      "locale": "en",
      "timezone": {
        "automaticTimezone": "Europe/Madrid",
        "manualTimezone": "Asia/Tashkent",
        "useAutomaticTimezone": "true"
      },
      "disable_welcome_email": false
    },
    "su6hwbfqe3r9zem15emffm8q5h": {
      "id": "su6hwbfqe3r9zem15emffm8q5h",
      "create_at": 1748573525096,
      "update_at": 1748573750479,
      "delete_at": 0,
      "username": "zenjiro",
      "auth_data": "",
      "auth_service": "",
      "email": "",
      "nickname": "",
      "first_name": "",
      "last_name": "",
      "position": "",
      "roles": "system_user",
      "locale": "en",
      "timezone": {
        "automaticTimezone": "Asia/Tokyo",
        "manualTimezone": "",
        "useAutomaticTimezone": "true"
      },
      "remote_id": "",
      "disable_welcome_email": false
    },
    "sukwowdqntng8e94rek5pe36xa": {
      "id": "sukwowdqntng8e94rek5pe36xa",
      "create_at": 1570224436832,
      "update_at": 1749554169948,
      "delete_at": 0,
      "username": "mohammed-zubair.ahmed",
      "auth_data": "",
      "auth_service": "",
      "email": "",
      "nickname": "Zubair",
      "first_name": "Mohammed Zubair",
      "last_name": "Ahmed",
      "position": "Software Design Engineer II",
      "roles": "system_user",
      "props": {
        "customStatus": "{\"emoji\":\"speech_balloon\",\"text\":\"A\",\"duration\":\"today\",\"expires_at\":\"2025-01-25T18:30:00Z\"}",
        "last_search_pointer": "0",
        "show_last_active": "false"
      },
      "last_picture_update": 1672568171700,
      "locale": "en",
      "timezone": {
        "automaticTimezone": "Asia/Kolkata",
        "manualTimezone": "Asia/Chita",
        "useAutomaticTimezone": "true"
      },
      "disable_welcome_email": false
    }
  },
  "file_infos": {},
  "files": {}
}
